// Top-level build file where you can add configuration options common to all sub-projects/modules.
import groovy.json.JsonSlurper

// apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
buildscript {
    ext {
        buildToolsVersion = "30.0.2"
        minSdkVersion = 21
        compileSdkVersion = 31
        targetSdkVersion = 31
    }
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.8.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }

        google()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://android-sdk.is.com/' }
    }
}

subprojects {
    ext {
      versionMajor = 1
      versionMinor = 0
      versionPatch = 1
      def versionString = getNpmVersionArray()
      if (versionString) {
        versionMajor = versionString[0]
        versionMinor = versionString[1]
        versionPatch = versionString[2]
      }
    }
}

private static Object getNpmVersion() {
  try {
    def inputFile = new File("../package.json")
    def packageJson = new JsonSlurper().parseText(inputFile.text)
    return packageJson["version"]
  }
  catch (exception) {}
}

private static int[] getNpmVersionArray() { // major [0], minor [1], patch [2]
  def version = getNpmVersion()
  if (version) {
    def (major, minor, patch) = version.tokenize('.-')
    return [Integer.parseInt(major), Integer.parseInt(minor), Integer.parseInt(patch)] as int[]
  }
}
